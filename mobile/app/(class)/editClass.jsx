import { View, ScrollView, Alert, TouchableOpacity, Text } from "react-native";
import { useRouter, useLocalSearchParams } from "expo-router";
import { useEffect, useState } from "react";
import { useClasses } from "../../hooks/useClasses";
import Loading from "../../components/Loading";
import Header from "../../components/Header";
import Input from "../../components/Input";
import DatePicker from "../../components/DatePicker";
import { Ionicons } from "@expo/vector-icons";

const EditClassPage = () => {
  const router = useRouter();
  const { class_id } = useLocalSearchParams();

  // Hook ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• API
  const {
    classData,
    loading,
    fetchClassById,
    updateClassesById,
    deleteClassById,
  } = useClasses();

  // üëà 1. ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏°‡∏≤‡πÉ‡∏ä‡πâ useState ‡πÅ‡∏ö‡∏ö‡πÅ‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ CreateClassroom
  const [subjectName, setSubjectName] = useState("");
  const [semesterStartDate, setSemesterStartDate] = useState("");
  const [semesterWeeks, setSemesterWeeks] = useState("");

  // Effect ‡∏ó‡∏µ‡πà 1: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏•‡∏≤‡∏™‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
  useEffect(() => {
    if (class_id) {
      fetchClassById(class_id);
    }
  }, [class_id]); // Dependency ‡∏Ñ‡∏∑‡∏≠ class_id ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô

  // Effect ‡∏ó‡∏µ‡πà 2: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï State ‡∏Ç‡∏≠‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API ‡∏°‡∏≤‡∏ñ‡∏∂‡∏á
  useEffect(() => {
    if (classData && classData.classDetail) {
      const details = classData.classDetail;
      setSubjectName(details.subject_name || "");
      setSemesterStartDate(details.semester_start_date || "");
      setSemesterWeeks(
        details.semester_weeks ? String(details.semester_weeks) : ""
      );
    }
  }, [classData]);

  // üëà 2. ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á handleSave ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ State ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà
  const handleSave = async () => {
    try {
      if (
        !subjectName?.trim() ||
        !semesterStartDate?.trim() ||
        !semesterWeeks?.trim()
      ) {
        Alert.alert("‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á");
        return;
      }

      const semesterWeeksNumber = Number(semesterWeeks.trim());
      if (isNaN(semesterWeeksNumber) || semesterWeeksNumber <= 0) {
        Alert.alert("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0");
        return;
      }

      await updateClassesById(class_id, {
        subject_name: subjectName.trim(),
        semester_start_date: semesterStartDate.trim(),
        semester_weeks: semesterWeeksNumber,
      });

      Alert.alert("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
      router.back();
    } catch (error) {
      Alert.alert("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ");
      console.error("‚ùå Error updating class:", error);
    }
  };

  const handleDeleteClass = async () => {
    try {
      // 1. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏à‡∏≤‡∏Å Hook
      const success = await deleteClassById(class_id);

      // 2. ‡∏ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ true) ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á Alert ‡πÅ‡∏•‡∏∞‡∏ô‡∏≥‡∏ó‡∏≤‡∏á
      if (success) {
        Alert.alert("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "‡∏•‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
        router.replace("/");
      }
    } catch (error) {
      Alert.alert(
        "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
        "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"
      );
      console.error("‚ùå Error deleting class:", error);
    }
  };

  // ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç Loading, ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏≠‡∏ô fetch ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
  if (loading && !classData) {
    return <Loading />;
  }

  // üëà 3. ‡∏ô‡∏≥‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡∏à‡∏≤‡∏Å CreateClassroom.jsx ‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  return (
    <View className="flex-1 bg-[#121212]">
      <Header
        title="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô"
        backgroundColor="#252525"
        statusBarStyle="light"
        textButton="‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å"
        textColor="#1f3d74"
        backgroundColorButton="#a8c6fc"
        onPress={handleSave}
      />

      {/* CONTENT */}
      <ScrollView className="flex-1 px-16 mt-10">
        {/* form */}
        <View className="gap-5 mt-3">
          <Input
            label="‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô"
            value={subjectName}
            onChangeText={setSubjectName}
          />

          <DatePicker
            label="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏†‡∏≤‡∏Ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô"
            value={semesterStartDate}
            onChange={setSemesterStartDate}
          />

          <Input
            label="‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô (‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå)"
            value={semesterWeeks}
            onChangeText={setSemesterWeeks}
            keyboardType="numeric"
          />

          <TouchableOpacity
            className="flex-row items-center justify-center py-3 px-5 rounded-xl bg-red-600 active:bg-red-700"
            onPress={() => {
              Alert.alert(
                "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö",
                "‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ô‡∏µ‡πâ? ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ",
                [
                  { text: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", style: "cancel" },
                  {
                    text: "‡∏•‡∏ö",
                    style: "destructive",
                    onPress: () => handleDeleteClass(),
                  },
                ]
              );
            }}
          >
            <Ionicons name="trash" size={20} color="white" />
            <Text className="text-white font-bold text-base ml-2">
              ‡∏•‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
            </Text>
          </TouchableOpacity>
        </View>
      </ScrollView>
    </View>
  );
};

export default EditClassPage;
